{"version":3,"sources":["Navbar.js","LinkButton.js","images/Resume_Steve_Black_2021.pdf","Home.js","Card.js","images/WeatherAPP.JPG","images/SickTuneFinder.JPG","images/CS_WI_Button.JPG","projects.js","Footer.js","App.js","index.js"],"names":["Navbar","className","to","exact","LinkButton","LinkButtonContent","href","link","rel","target","title","Home","ButtonLink3","Resume","Card","CardContent","console","log","body","src","image","alt","Projects","Project1","ProjectImage1","Project2","ProjectImage2","Project3","ProjectImage3","Footer","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAgBeA,EAbA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,6DACA,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAArB,kBACA,cAAC,IAAD,CAASD,GAAG,YAAYC,OAAK,EAA7B,6BCFDC,EAPI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAClB,OACI,mBAAGJ,UAAU,aAAaK,KAAMD,EAAkBE,KAAMC,IAAI,aAAaC,OAAO,SAAhF,SAA0FJ,EAAkBK,SCFrG,MAA0B,oDCoC1BC,EAjCF,WACT,IAQMC,EAAc,CAChBF,MAAO,SACPH,KAAMM,GAOV,OACI,sBAAKZ,UAAU,OAAf,UACG,oBAAIA,UAAU,aAAd,sBACA,ghBAEA,uBACC,cAAC,EAAD,CAAaI,kBAvBD,CAChBK,MAAO,WACPH,KAAM,sDAsBF,cAAC,EAAD,CAAaF,kBApBD,CAChBK,MAAO,SACPH,KAAM,oCAmBF,cAAC,EAAD,CAAaF,kBAAmBO,IAChC,cAAC,EAAD,CAAaP,kBAdD,CAChBK,MAAO,UACPH,KAAM,sDAaF,2BClBGO,EAbF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEX,OADJC,QAAQC,IAAI,CAACF,gBAEL,sBAAKd,UAAU,OAAf,UACG,oBAAIA,UAAU,YAAd,SAA2Bc,EAAYL,QACvC,oBAAIT,UAAU,WAAd,SAA0Bc,EAAYG,OACtC,oBAAIjB,UAAU,WAAd,SAAyB,oBAAGK,KAAMS,EAAYR,KAAMC,IAAI,aAAaC,OAAO,SAAnD,2BAA2EM,EAAYL,WAChH,qBAAKT,UAAU,YAAYkB,IAAKJ,EAAYK,MAAOC,IAAI,aCPnD,MAA0B,uCCA1B,MAA0B,2CCA1B,MAA0B,yCCqC1BC,EAhCE,WAEb,IAAMC,EAAW,CACbb,MAAO,cACPQ,KAAM,oDACNE,MAAOI,EACPjB,KAAM,oDAEJkB,EAAW,CACbf,MAAO,mBACPQ,KAAM,4DACNE,MAAOM,EACPnB,KAAM,mDAEJoB,EAAW,CACbjB,MAAO,eACPQ,KAAM,2IACNE,MAAOQ,EACPrB,KAAM,gDAGV,OACI,sBAAKN,UAAU,OAAf,UACG,oBAAIA,UAAU,aAAd,sBACA,cAAC,EAAD,CAAMc,YAAaQ,IACnB,cAAC,EAAD,CAAMR,YAAaU,IACnB,cAAC,EAAD,CAAMV,YAAaY,Q,OCtBfE,EATA,WAEX,OACI,qBAAK5B,UAAU,SAAf,SACG,oBAAIA,UAAU,eAAd,sCC6BI6B,MArBf,WAOE,OACA,aADQ,CACP,IAAD,UACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAOE,OAAK,EAAC4B,KAAO,IAAIC,UAAWrB,IACnC,cAAC,IAAD,CAAOR,OAAK,EAAC4B,KAAO,YAAYC,UAAWV,IAC3C,cAAC,EAAD,aCpBRW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.75972f0d.chunk.js","sourcesContent":["import {NavLink} from 'react-router-dom';\n\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\">\n            <h1>SteveBecmpe React Portfolio</h1>\n            <div className=\"links\">\n                <NavLink to=\"/\" exact>Home</NavLink>\n                <NavLink to=\"/projects\" exact>Projects</NavLink>\n                {/* <a href=\"/about\">About</a> */}\n            </div>\n        </nav>\n      );\n}\n \nexport default Navbar;\n","const LinkButton = ({ LinkButtonContent }) => {\n    return (\n        <a className=\"LinkButton\" href={LinkButtonContent.link} rel='noreferrer' target=\"_blank\">{LinkButtonContent.title}</a>\n\n    );\n}\n\nexport default LinkButton;","export default __webpack_public_path__ + \"static/media/Resume_Steve_Black_2021.8b7efc75.pdf\";","import LinkButton from './LinkButton';\nimport Resume from './images/Resume_Steve_Black_2021.pdf';\n\nconst Home = () => {\n    const ButtonLink1 = {\n        title: \"Linkedin\",\n        link: 'https://www.linkedin.com/in/steve-black-a661814/'\n    }\n    const ButtonLink2 = {\n        title: \"Github\",\n        link: 'https://github.com/stevebecmpe'\n    }\n    const ButtonLink3 = {\n        title: \"Resume\",\n        link: Resume\n    }\n    const ButtonLink4 = {\n        title: \"Contact\",\n        link: 'mailto:steveblackecmpe@gmail.com?subject=Contact'\n    }\n\n    return (\n        <div className=\"home\">\n           <h1 className=\"mainHeader\">ABOUT ME</h1>\n           <p>Finding meaning in a sea of data is what I truly enjoy and what has brought me back to coding. After years of working in separate systems of standalone formats, learning to program what was needed in the moment, leads to a desire to make it all work together in a better way. Solving these types of problems is the direction I want to go. Learning to code and joining the community was my first step. \"Hello World\". I am here for the new way to solve manufacturing platform data incompatibility.\n           </p>\n           <br></br>\n            <LinkButton  LinkButtonContent={ButtonLink1}/>\n            <LinkButton  LinkButtonContent={ButtonLink2}/>\n            <LinkButton  LinkButtonContent={ButtonLink3}/>\n            <LinkButton  LinkButtonContent={ButtonLink4}/>\n            <br></br>\n        </div>\n    );\n}\n\nexport default Home;","const Card = ({CardContent}) => {\nconsole.log({CardContent});\n    return (\n        <div className=\"Card\">\n           <h1 className=\"CardTitle\">{CardContent.title}</h1>\n           <h2 className=\"CardBody\">{CardContent.body}</h2>\n           <h2 className=\"CardLink\"><a href={CardContent.link} rel='noreferrer' target=\"_blank\">Live Link to: {CardContent.title}</a></h2>\n           <img className=\"CardImage\" src={CardContent.image} alt=\"Card\" />\n           \n        </div>\n    );\n}\n\nexport default Card;","export default __webpack_public_path__ + \"static/media/WeatherAPP.b3b0cc9a.JPG\";","export default __webpack_public_path__ + \"static/media/SickTuneFinder.591f22a7.JPG\";","export default __webpack_public_path__ + \"static/media/CS_WI_Button.46a1a7e7.JPG\";","import Card from \"./Card\"\nimport ProjectImage1 from './images/WeatherAPP.JPG';\nimport ProjectImage2 from './images/SickTuneFinder.JPG';\nimport ProjectImage3 from './images/CS_WI_Button.JPG';\n\nconst Projects = () => {\n\n    const Project1 = {\n        title: \"Weather App\",\n        body: 'ZipCode Driven Open API that saves search locally',\n        image: ProjectImage1,\n        link: 'https://stevebecmpe.github.io/ECMPE-Weather-App/'\n    }\n    const Project2 = {\n        title: \"Sick Tune Finder\",\n        body: 'Open API music search APP, with some lyrics. Desktop only',\n        image: ProjectImage2,\n        link: 'https://stevebecmpe.github.io/SICK-TUNE-FINDER/'\n    }\n    const Project3 = {\n        title: \"CS_WI_Button\",\n        body: 'Single file app, inline css & script, generate buttons given text content, height, and width. Auto loads at 300% for easy copy and paste',\n        image: ProjectImage3,\n        link: 'https://stevebecmpe.github.io/CS_WI_Buttons/'\n    }\n\n    return (\n        <div className=\"home\">\n           <h1 className=\"mainHeader\">Projects</h1>\n           <Card CardContent={Project1} />\n           <Card CardContent={Project2} />\n           <Card CardContent={Project3} />\n\n        </div>\n    );\n}\n\nexport default Projects;","const Footer = () => {\n\n    return (\n        <div className=\"footer\">\n           <h1 className=\"footerHeader\">Â© 2021 Steve Black</h1>\n        </div>\n    );\n}\n\nexport default Footer;","//Root component\n// more components get nested below (inside) this component etc. etc. \n// react version 17 doesn't need import React from 'react';\n\nimport './App.css';\nimport Navbar from './Navbar';\n//import Header from './Header';\nimport Home from './Home';\nimport Projects from './projects';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Footer from './Footer';\n\nfunction App() {//must start with capital letter and can be an arrow function. \n  // const title = 'App Components curly';\n  // const likes = 50;\n  // const urlValue = \"http://www.google.com\";\n  // const urlName = 'Google site';\n\n  //stop valid j \n  return (//JSX content, class must be className (camel case), Class is a JS reserved word\n  <Router>\n    <div className=\"App\">\n      <Navbar/>\n      <div className=\"content\">\n        <Route exact path = '/' component={Home}/>\n        <Route exact path = '/projects' component={Projects}/>\n        <Footer/>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}